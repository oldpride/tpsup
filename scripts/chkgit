#!/bin/bash

check_only=N

usage () {
   cat <<EOF
usage:

   $prog 
   $prog -n

   -n     check only 

EOF

   exit 1
}


while getopts n o;
do
   case "$o" in
      #d) depot_dir="$OPTARG";;
      n) check_only=Y;;
      *) echo "unknow switch '$o'"; usage;;
   esac
done

shift $((OPTIND-1))

if [ $# -ne 0 ]; then
   echo "wrong number of args"
   usage
fi

. $TPSUP/profile

for cmd in mydjango myangular kdbnotes myblockchain mycpp myfront myjava myjoomla myjs mykivy mynotes myns mysite mytp kungfusql myduino mydice myvue vercel*
do 
   echo ""
   echo "------ $cmd -------"
   echo ""

   subdir=`echo $cmd|cut -c3-`
   if ! $cmd 2>/dev/null; then
      if ! mydir $subdir 2>/dev/null; then
         continue
      fi
   fi

   #(set -x; git status)
   #echo ""
   #(set -x; git fetch --dry-run)
   fetch=$(git fetch --dry-run 2>&1)
   need_pull=N
   if [ -n "$fetch" ]; then
      need_pull=Y
      (set -x; git fetch --dry-run)
   fi

   # tian@linux1:/home/tian/sitebase/github/notes$ git status --show-stash
   # On branch master
   # Your branch and 'origin/master' have diverged,
   # and have 3 and 3 different commits each, respectively.
   #   (use "git pull" to merge the remote branch into yours)
   # 
   # nothing to commit, working tree clean

   if git status | grep 'use "git pull"' >/dev/null; then
      need_pull=Y
      (set -x; git status)
   fi

   if [ $need_pull = Y ]; then
      if [ $check_only = N ]; then
	 echo ""
         echo "git pull? Y|N ? [N]"
         read answer

         if [ "X$answer" != "XY" -a "X$answer" != "Xy" ]; then
            echo "Answer is "$answer". Not done"
	 else
            (set -x; gitpull) # gitpull is a wrapper for "git pull"
         fi
      fi
   fi

   status=$(git status --porcelain)
   diff=$(git diff --stat --cached origin/master)
   if [ -n "$status" -o -n "$diff" ]; then
      (set -x; git status)
      (set -x; git diff --stat --cached origin/master)
      if [ $check_only = N ]; then
	 echo ""
         echo "git push? Y|N ? [N]"
         read answer

         if [ "X$answer" != "XY" -a "X$answer" != "Xy" ]; then
            echo "Answer is "$answer". Not done"
	 else
            (set -x; git add -A)
	    (set -x; git commit -m update)
	    (set -x; git push)
         fi
      fi
   fi
done

#!/bin/bash

prog=`basename $0`

usage () {
   cat >&2 <<EOF

uasge:

   $prog target_dir rpm1 [rpm2 ...]

   install rpm files to target_dir

   -r        remove the rpm contents from the target dir

example:

   $prog vim_dir vim.rpm

EOF

   exit 1
}

remove=0
if [ "X$1" = "X-r" ]; then
   remove=1
   shift
fi

if [ $# -lt 2 ]; then
   echo "wrong number of args" >&2
   usage
fi

dir=$1
shift

if [ ! -d $dir ]; then
   (set -x; mkdir -p $dir) || exit 1
   chmod 755 $dir
else
   # test dir
   (cd $dir) || exit 1
fi

# sometimes 3rd party (anaconda) lib gets linked to rpm command, causing error
unset LD_LIBRARY_PATH



for rpm in $@
do
   if [ $remove -eq 0 ]; then
      echo ""
      echo "extracting $rpm to $dir"
      echo ""
      set -x
      rpm2cpio $rpm | (cd $dir && cpio -idmv)
      [ $? -eq 0 ] || exit 1
   else
      echo ""
      echo "removing $rpm from $dir"
      echo ""
      # extract the rpm to a temp dir
      tmpdir=$(get_tmp /tmp $prog $$)
      [ -d $tmpdir ] && /bin/rm -fr $tmpdir 
      rpm2cpio $rpm | (cd $tmpdir && cpio -idmv)
      cd $tmpdir

      # list the paths and reverse the lines using tac command.
      # we reverse the order so that we can remove the files before remove dir.
      files=$(find .|tac )

      # remove each file
      echo "$files" | while read line;
      do
         target="$dir/$line"
         if [ -e $target ]; then
            if [ -d $target ]; then
               (set -x; /bin/rmdir $target)
            else
               (set -x; /bin/rm -f $target)  
            fi
         fi
      done    
   fi
done

#!/usr/bin/perl

use warnings;
use strict;
use Data::Dumper;
use Getopt::Long;
use Carp;
use TPSUP::LOCK qw(tpentry_cmd);

my $prog = $0; $prog =~ s:.*/::;

sub usage {
   my ($message) = @_;

   print "$message\n" if $message;

   print STDERR << "END";
usage:

   $prog                     cmd
   $prog ${prog}_switches -- cmd cmd_switches

   -b book.csv           this contains the encoded information, example format below
                         default to ~/.tpsup/book.csv

        key,user,encoded,commandpattern,setting,comment
        swagger,sys.admin,^/usr/bin/curl\$|/sqlplus\$,%29%06%0F%05%00,a=1;b='john, sam',test swagger
examples:

   # this will fail at commandpattern matching
   $prog -- curl -u tpentry{swagger}{user}:tpentry{swagger}{decoded} -X GET --header 'Accept: application/json' https://abc.org/LCA2/index.php

   # this will work
   $prog -- /usr/bin/curl -u tpentry{swagger}{user}:tpentry{swagger}{decoded} -X GET --header 'Accept: application/json' https://abc.org/LCA2/index.php 

END

   exit 1;
}

my $book;

GetOptions(
   'book=s'       =>      \$book,
) || usage ("cannot parse command line: $!");

usage("wrong number of args") if !@ARGV;

exit tpentry_cmd(\@ARGV);

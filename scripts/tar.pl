#!/usr/bin/env perl

use warnings;
use strict;
use Data::Dumper;
use Getopt::Long;
use Carp;

BEGIN {
   if ( $ENV{PERL5LIB} !~ m:/cygdrive|/c/: ) {
      # cygwin and gitbash don't have this module      
      require Carp::Always;  # this is very wordy
   }
}

use Archive::Tar;  # use the one under tpsup/lib/perltest. run perltestenv to set up PERL5LIB

my $prog = $0; $prog =~ s:.*/::;

my $DetailExpire = 24*3600;
my $interval = 10;
my $interval_limit = 60;
my $StatusExpire = 0;  

sub usage {
   my ($message) = @_;
   print "$message\n" if $message;

   print << "END";
usage:

   first run perltestenv to set up PERL5LIB

   $prog -t -v -f file.tar
   $prog -x -v -f file.tar
   
description:
 
   this is a troubleshooting tool to check a tar file. 

   we use this to check the tar file generated by a Powershell program

examples:

   $prog -t -v -f ~/sambashare/junk.tar
   $prog -x -v -f ~/sambashare/junk.tar

   $prog -t -v -f //linux1/tian/junk.tar

END

   exit 1;
}

my $verbose;
my $extract;
my $tableOfContents;
my $tarfile;

GetOptions(
   'v|verbose'     => \$verbose,
   'x'             => \$extract,
   't'             => \$tableOfContents,
   'f=s'           => \$tarfile,
) || usage("cannot parse command line: $!");

#usage("wrong number of args") if @ARGV != 1;
usage("must specify an action") if !$extract&&!$tableOfContents;

#my ($file) = @ARGV;

my $tar = Archive::Tar->new;

if ($tableOfContents) {
   $tar->read($tarfile);
   my @result = $tar->list_files();
   print Dumper(\@result);
} elsif ($extract) {
   $tar->read($tarfile);
   $tar->extract();
}




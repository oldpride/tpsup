#!/bin/bash


prog=`basename $0`


usage () {
   cat >&2 <<EOF
usage:

   $prog current
   $prog tty

   get initial login and remote ip address of the current tty

   -v     verbose mode

examples:

   $prog current
   $prog pts/10
   $prog /dev/pts/10

EOF
   exit 1
}

verbose=N
while getopts v o;
do
   case "$o" in
      v)  verbose=Y;;
      #x)  max=$OPTARG;;
      *)   usage;;
   esac
done

shift $((OPTIND-1))

if [ $# -ne 1 ]; then
   echo "wrong number of args" >&2
   usage
fi

if [ "$1" = "current" ]; then
   # current mode, use current tty
   if [ $# -ne 1 ]; then
      echo "wrong number of args for current mode" >&2
      usage
   fi

   full_tty=`tty`
   if [ $? -ne 0 ]; then
      echo "cannot get current tty" >&2
      exit 1
   fi
   short_tty=$(echo "$full_tty" | sed 's|/dev/||')
else
   if [ "${1:0:5}" = "/dev/" ]; then
      full_tty="$1"
      short_tty=$(echo "$full_tty" | sed 's|/dev/||')
   else
      full_tty="/dev/$1"
      short_tty="$1"
   fi
fi

if [ $verbose = Y ]; then
   echo "full_tty=$full_tty"
   echo "short_tty=$short_tty"
   set -x
fi

who=$(who | grep "$short_tty ")
if [ -z "$who" ]; then
   echo "no login user on $full_tty" >&2
   exit 1
fi

login=$(echo "$who" | awk '{print $1}')
remote_ip=$(echo "$who" | awk '{print $5}')
# remove parentheses around the IP address if present
remote_ip=$(echo "$remote_ip" | sed 's/(\(.*\))/\1/')

echo "$login $full_tty $remote_ip"

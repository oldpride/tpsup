local j javac_bin found BASEDIRS b j usage prog version

prog=${FUNCNAME[1]}

usage="

usage:

$prog check     # check current settings
$prog list      # list installed vesions
$prog version   # set to a specific version

example:

$prog check
$prog list
$prog 1.8

"

if [ $# -ne 1 ]; then
   echo "$prog: wrong number of args"
   echo "$usage"
   return
fi

version=$1

# tian@linux1:/home/tian$ ls /usr/lib/jvm
# java-1.11.0-openjdk-amd64         java-1.8.0-openjdk-amd64         openjdk-11
# .java-1.11.0-openjdk-amd64.jinfo  .java-1.8.0-openjdk-amd64.jinfo
# default-java  java-11-openjdk-amd64             java-8-openjdk-amd64
# tian@linux1:/home/tian/sitebase/github$ cd /usr/lib/jvm
# tian@linux1:/usr/lib/jvm$ ls java-11-openjdk-amd64
# bin  conf  docs  include  jmods  legal  lib  man  release

user=$(id | cut -d\( -f2 | cut -d\) -f1)

if [[ $UNAME =~ CYGWIN ]]; then
   # use array because we have space char in the string
   BASEDIRS=(
      "/cygdrive/c/Users/$user/java"
      "/cygdrive/c/Program Files/Java"
   )
elif [[ $UNAME =~ MINGW64_NT ]]; then
   # can also use, [[ $UNAME =~ Msys ]]
   BASEDIRS=(
      "/c/Users/$user/java"
      "/c/Program Files/Java"
   )
elif [[ $UNAME =~ Linux ]]; then
   BASEDIRS=(
      "$HOME/java"
      "/usr/lib/jvm"
   )
else
   echo "unsupported UNAME='$UNAME'"
   return
fi

# echo "BASEDIRS=${BASEDIRS[@]}"

if [ $version = check ]; then
   if [ "X$JAVA_HOME" = "X" ]; then
      echo "JAVA_HOME is not set"
      return
   fi

   echo ""
   echo "verify PATH:"
   which java
   which javac
   which jar

   return
elif [ $version = list ]; then
   for b in "${BASEDIRS[@]}"; do
      /bin/ls -1d "$b"/* 2>/dev/null
   done
else
   # set a version
   # favor jdk because jdk contains jre
   for j in jdk jre; do
      for b in "${BASEDIRS[@]}"; do
         if ! [ -d "$b" ]; then
            continue
         fi

         for subdir in $(/bin/ls -1 "$b" | egrep "${j}[^0-9]*${version}$|${j}[^0-9]*${version}[^0-9]|[^0-9]${version}[^0-9]*${j}|^${version}[^0-9]${j}"); do
            full_path="$b/$subdir/bin"
            if [ -d "$full_path" ]; then
               echo "set JAVA_HOME='$b/$subdir'"
               export JAVA_HOME="$b/$subdir"
               export PATH="$full_path:$PATH"
               reduce PATH
               return
            fi
         done
      done
   done

   echo "cannot find java version '$version' in BASEDIRS=${BASEDIRS[@]}"
   return
fi
